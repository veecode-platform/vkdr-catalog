apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: github-pages-blog-template-github
  title: Github Pages Simple Blog Template
  description: Create a blog website powered with Github-Pages
  annotations:
    backstage.io/techdocs-ref: dir:.
  tags:
    - platform-templates
    - github-pages
    - blog
spec:
  owner: veecode/platform
  type: website
  parameters:
    - title: Provide some simple information
      required:
        - componentId
        - owner
      properties:
        componentId:
          title: Name
          type: string
          pattern: '^([a-z0-9]|[.]|[_]|[-])*$'
          description: Unique name of the component
          ui:field: EntityNamePicker
        description:
          title: Description
          type: string
          description: Help others understand what this blog is for.
        owner:
          title: Owner
          type: string
          description: Owner of the component
          default: "group:default/demo"        
          ui:field: OwnerPicker
          ui:options:
            allowedKinds:
              - Group
    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          reuseName: componentId          
          ui:field: RepoUrlSelector
          ui:options:
            allowedHosts:
              - github.com              
  steps:
    - id: template
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ./skeleton
        copyWithoutRender:
          - .github/workflows/*
        values:
          componentId: ${{ parameters.componentId }}
          description: ${{ parameters.description }}
          repoUrl: ${{ (parameters.repoUrl | parseRepoUrl).owner }}/${{ (parameters.repoUrl | parseRepoUrl).repo }}
          owner: ${{ parameters.owner }}

    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts: ["github.com"]
        description: This is ${{ parameters.componentId }}
        repoUrl: ${{ parameters.repoUrl }}
        repoVisibility: public

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml"

  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
